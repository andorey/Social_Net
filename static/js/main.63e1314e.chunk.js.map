{"version":3,"sources":["NavBar/NavBar.module.css","Profile/Profile.module.css","Profile/Posts/Posts.module.css","Profile/Posts/Post/Post.module.css","Header/Header.module.css","Dialogs/Dialog/Dialog.module.css","Header/Header.jsx","NavBar/NavBar.jsx","Profile/Posts/Post/Post.jsx","Profile/Posts/Posts.jsx","Profile/Profile.jsx","Dialogs/Dialog/Dialog.jsx","Dialogs/Dialogs.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","s","header","src","alt","NavBar","nav","active","item","href","Post","props","post","message","likesCount","Posts","posts","textArea","cols","rows","Profile","myPhoto","Dialog","dialog","Dialogs","dialogs","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,yB,mBCAjFD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,MAAQ,uBAAuB,QAAU,2B,gBCA5FD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,SAAW,0B,gBCA1DD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,qB,qBCAnDD,EAAOC,QAAU,CAAC,OAAS,yB,kCCA3BD,EAAOC,QAAU,CAAC,OAAS,yB,yLCUTC,EARH,WACd,OACC,yBAAKC,UAAWC,IAAEC,QACjB,yBAAKC,IAAI,uEAAuEC,IAAI,O,gBCmBxEC,EAtBA,WACd,OACC,yBAAKL,UAAS,UAAKC,IAAEK,IAAP,YAAcL,IAAEM,SAC7B,yBAAKP,UAAS,UAAKC,IAAEO,OACpB,uBAAGC,KAAK,YAAR,YAED,yBAAKT,UAAWC,IAAEO,MACjB,uBAAGC,KAAK,YAAR,aAED,yBAAKT,UAAWC,IAAEO,MACjB,uBAAGC,KAAK,SAAR,SAED,yBAAKT,UAAWC,IAAEO,MACjB,uBAAGC,KAAK,UAAR,UAED,yBAAKT,UAAWC,IAAEO,MACjB,uBAAGC,KAAK,aAAR,e,mDCCWC,EAjBF,SAACC,GACb,OACC,yBAAKX,UAAWC,IAAEW,MACjB,yBAAKZ,UAAWC,IAAEO,MACjB,yBACCL,IAAI,2GACJC,IAAI,KACJO,EAAME,QACP,6BACC,sCACCF,EAAMG,eCOGC,EAhBD,WACb,OACC,yBAAKf,UAAWC,IAAEe,OACjB,yBAAKhB,UAAWC,IAAEgB,UAAlB,aAEC,8BAAUC,KAAK,KAAKC,KAAK,KAAzB,KACA,6CAED,6BACC,kBAAC,EAAD,CAAMN,QAAQ,mBAAmBC,WAAW,SAC5C,kBAAC,EAAD,CAAMD,QAAQ,gBAAgBC,WAAW,aCW9BM,EArBC,WACf,OACC,yBAAKpB,UAAWC,IAAEC,QACjB,6BACC,yBACCC,IAAI,oFACJC,IAAI,aAEN,yBAAKJ,UAAWC,IAAEoB,SACjB,yBAAKlB,IAAI,4FAA4FC,IAAI,KACzG,mDACoB,6BADpB,uDAID,6BACC,kBAAC,EAAD,S,kCCRWkB,EARA,WACd,OACC,yBAAKtB,UAAWC,IAAEsB,QAAlB,WCOaC,EARC,SAACb,GAChB,OACC,yBAAKX,UAAWC,IAAEwB,SACjB,kBAAC,EAAD,Q,eCmBYC,EAlBH,SAACf,GACZ,OACC,kBAAC,IAAD,KACC,yBAAKX,UAAU,eACd,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,uBACd,kBAAC,IAAD,CAAO2B,KAAK,WAAWC,UAAWR,IAClC,kBAAC,IAAD,CAAOO,KAAK,WAAWC,UAAWJ,IAClC,kBAAC,IAAD,CAAOG,KAAK,QAAQC,UAAWJ,IAC/B,kBAAC,IAAD,CAAOG,KAAK,SAASC,UAAWJ,IAChC,kBAAC,IAAD,CAAOG,KAAK,YAAYC,UAAWJ,QCPpBK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.63e1314e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__-XRAL\",\"item\":\"NavBar_item__1QksE\",\"active\":\"NavBar_active__1bwqr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Profile_header__3Zwc_\",\"posts\":\"Profile_posts__3dMcJ\",\"myPhoto\":\"Profile_myPhoto__12_7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__2JdrA\",\"textArea\":\"Posts_textArea__1bq6_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1XxMm\",\"item\":\"Post_item__968x6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1m9KH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__2joWe\"};","import React from 'react';\nimport s from './Header.module.css';\n\nconst Header = () => {\n\treturn (\n\t\t<div className={s.header}>\n\t\t\t<img src=\"https://seeklogo.com/images/M/MASON-logo-6EC4494474-seeklogo.com.png\" alt=\"\"/>\n\t\t</div>\n\t)\n}\n\n\t\t\texport default Header;\n","import React from 'react';\nimport s from './NavBar.module.css';\n\nconst NavBar = () => {\n\treturn (\n\t\t<div className={`${s.nav} ${s.active}`}>\n\t\t\t<div className={`${s.item}`}>\n\t\t\t\t<a href=\"/profile\">Profile</a>\n\t\t\t</div>\n\t\t\t<div className={s.item}>\n\t\t\t\t<a href=\"/dialogs\">Messages</a>\n\t\t\t</div>\n\t\t\t<div className={s.item}>\n\t\t\t\t<a href=\"/news\">News</a>\n\t\t\t</div>\n\t\t\t<div className={s.item}>\n\t\t\t\t<a href=\"/music\">Music</a>\n\t\t\t</div>\n\t\t\t<div className={s.item}>\n\t\t\t\t<a href=\"/settings\">Settings</a>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default NavBar;\n","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n\treturn (\n\t\t<div className={s.post}>\n\t\t\t<div className={s.item}>\n\t\t\t\t<img\n\t\t\t\t\tsrc=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTa-Rtjo86Y2Wo-a_WCxI-Eao3f-L9VbK9eGMoBSg-Pq5dhkaSd\"\n\t\t\t\t\talt=\"\"/>\n\t\t\t\t{props.message}\n\t\t\t\t<div>\n\t\t\t\t\t<span>like</span>\n\t\t\t\t\t{props.likesCount}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Post;\n","import React from 'react';\nimport s from './Posts.module.css';\nimport Post from \"./Post/Post\";\n\nconst Posts = () => {\n\treturn (\n\t\t<div className={s.posts}>\n\t\t\t<div className={s.textArea}>\n\t\t\t\tMy posts :\n\t\t\t\t<textarea cols=\"30\" rows=\"2\"> </textarea>\n\t\t\t\t<button>Add Post</button>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Post message=\"Hi! how are you?\" likesCount=\" : 5\"/>\n\t\t\t\t<Post message=\"I'm go to bed\" likesCount=\" : 10\"/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Posts;\n","import React from 'react';\nimport s from './Profile.module.css';\nimport Posts from \"./Posts/Posts\";\n\nconst Profile = () => {\n\treturn (\n\t\t<div className={s.header}>\n\t\t\t<div>\n\t\t\t\t<img\n\t\t\t\t\tsrc=\"https://images.wallpaperscraft.com/image/mountain_lake_nature_81057_2560x1080.jpg\"\n\t\t\t\t\talt=\"picture\"/>\n\t\t\t</div>\n\t\t\t<div className={s.myPhoto}>\n\t\t\t\t<img src=\"https://clutch.ua/crops/ba1ddb/360x0/1/0/2019/05/17/Ns355MiU9gTtcUX1sI0h2JsX8rDxjwTv.jpeg\" alt=\"\"/>\n\t\t\t\t<div>\n\t\t\t\t\tI am JS Developer. <br/> and I think that React is very cool framework! :)\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Posts />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Profile;\n","import React from 'react';\nimport s from './Dialog.module.css';\n\nconst Dialog = () => {\n\treturn (\n\t\t<div className={s.dialog}>\n\t\t\tDialog\n\t\t</div>\n\t);\n}\n\nexport default Dialog;\n","import React from 'react';\nimport s from './Dialogs.css';\nimport Dialog from \"./Dialog/Dialog\";\n\nconst Dialogs = (props) => {\n\treturn (\n\t\t<div className={s.dialogs}>\n\t\t\t<Dialog/>\n\t\t</div>\n\t)\n}\n\nexport default Dialogs;","import React from 'react';\nimport './App.css';\nimport Header from \"./Header/Header\";\nimport NavBar from \"./NavBar/NavBar\";\nimport Profile from \"./Profile/Profile\";\nimport Dialogs from \"./Dialogs/Dialogs\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\n\nconst App = (props) => {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<div className=\"app-wrapper\">\n\t\t\t\t<Header/>\n\t\t\t\t<NavBar/>\n\t\t\t\t<div className=\"app-wrapper-content\">\n\t\t\t\t\t<Route path=\"/profile\" component={Profile}/>\n\t\t\t\t\t<Route path=\"/dialogs\" component={Dialogs}/>\n\t\t\t\t\t<Route path=\"/news\" component={Dialogs}/>\n\t\t\t\t\t<Route path=\"/music\" component={Dialogs}/>\n\t\t\t\t\t<Route path=\"/settings\" component={Dialogs}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</BrowserRouter>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}