{"version":3,"sources":["NavBar/NavBar.module.css","Profile/Profile.module.css","Dialogs/Dialogs.module.css","Profile/Posts/Post/Post.module.css","Profile/Posts/Posts.module.css","Dialogs/Dialog/Dialog.module.css","Header/Header.module.css","Dialogs/Messages/Message.module.css","serviceWorker.js","redux/state.js","Header/Header.jsx","NavBar/NavBar.jsx","Profile/Posts/Post/Post.jsx","Profile/Posts/Posts.jsx","Profile/Profile.jsx","Dialogs/Messages/Message.jsx","Dialogs/Dialog/Dialog.jsx","Dialogs/Dialogs.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","store","_state","dialogsPage","dialogsData","id","name","messagesData","message","postPage","postData","post","likesCount","newPostText","getState","_callSubscriber","console","log","addPost","newPost","push","updateNewPostText","newText","subscribe","observer","Header","className","s","header","src","alt","NavBar","nav","active","item","to","activeClassName","activeLink","Post","props","photo","Posts","postsElements","map","p","newPostElement","React","createRef","posts","textArea","onChange","text","current","value","ref","onKeyPress","e","key","onClick","Profile","myPhoto","icon","aboutMe","Message","Dialog","dialog","Dialogs","dialogsElements","state","d","messagesElements","m","newMessageElement","dialogs","dialogsItem","messages","textAreaButton","textMessage","alert","App","path","render","renderEntireTree","ReactDOM","bind","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.95cf5699.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__-XRAL\",\"item\":\"NavBar_item__1QksE\",\"active\":\"NavBar_active__1bwqr\",\"activeLink\":\"NavBar_activeLink__hbR1l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Profile_header__3Zwc_\",\"posts\":\"Profile_posts__3dMcJ\",\"myPhoto\":\"Profile_myPhoto__12_7B\",\"icon\":\"Profile_icon__1xfKK\",\"aboutMe\":\"Profile_aboutMe__3Rwj6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2i7zU\",\"dialogsItem\":\"Dialogs_dialogsItem__CL_5_\",\"messages\":\"Dialogs_messages__3Qz2o\",\"textAreaButton\":\"Dialogs_textAreaButton__1mAUV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1XxMm\",\"item\":\"Post_item__968x6\",\"photo\":\"Post_photo__s2i1a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__2JdrA\",\"textArea\":\"Posts_textArea__1bq6_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__2joWe\",\"photo\":\"Dialog_photo__678Qo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1m9KH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__XSKBY\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let store = {\r\r\t_state: {\r\r\t\tdialogsPage: {\r\t\t\tdialogsData: [\r\t\t\t\t{id: 1, name: 'Andrew'},\r\t\t\t\t{id: 2, name: 'Dimych'},\r\t\t\t\t{id: 3, name: 'Alex'},\r\t\t\t\t{id: 4, name: 'Colin'},\r\t\t\t\t{id: 5, name: 'Agnieszka'},\r\t\t\t],\r\r\r\t\t\tmessagesData: [\r\t\t\t\t{id: 1, message: 'Hi, how are you?'},\r\t\t\t\t{id: 2, message: \"Are you O'k?\"},\r\t\t\t\t{id: 3, message: 'Good night my friends. I go to bed'},\r\t\t\t\t{id: 4, message: 'To go shopping during day'},\r\t\t\t\t{id: 5, message: 'She is do not know where I live'},\r\t\t\t],\r\t\t},\r\r\t\tpostPage: {\r\t\t\tpostData: [\r\t\t\t\t{id: 1, post: 'How about you?', likesCount: 5},\r\t\t\t\t{id: 2, post: 'I go to bed, what go you think?', likesCount: 10},\r\t\t\t\t{id: 3, post: 'I like React and you?', likesCount: 7},\r\t\t\t\t{id: 4, post: 'I try change location data props', likesCount: 18},\r\t\t\t\t{id: 5, post: 'Do you want how old are you?', likesCount: 4},\r\t\t\t],\r\t\t\tnewPostText: ''\r\t\t}\r\r\t},\r\r\tgetState() {\r\t\treturn this._state;\r\t},\r\r\t_callSubscriber() {\r\t\tconsole.log('state work')\r\t},\r\r\taddPost() {\r\t\tlet newPost = {\r\t\t\tid: 0,\r\t\t\tpost: this._state.postPage.newPostText,\r\t\t\tlikesCount: 0\r\t\t};\r\t\tthis._state.postPage.postData.push(newPost);\r\t\tthis._state.postPage.newPostText = '';\r\t\tthis._callSubscriber(this._state);\r\t},\r\r\tupdateNewPostText(newText) {\r\t\tthis._state.postPage.newPostText = newText;\r\t\tthis._callSubscriber(this._state);\r\t},\r\r\tsubscribe(observer) {\r\t\tthis._callSubscriber = observer; \t\t\t// this is pattern 'observer' (my first pattern)\r\t}\r\r}\r\r\r//function for view results works state\rwindow.store = store;\r//-------------------------------------\rexport default store;","import React from 'react';\nimport s from './Header.module.css';\n\nconst Header = () => {\n\treturn (\n\t\t<div className={s.header}>\n\t\t\t<img src=\"https://seeklogo.com/images/M/MASON-logo-6EC4494474-seeklogo.com.png\" alt=\"\"/>\n\t\t\t<div>Novus Ordo Seclorum</div>\n\t\t\t<img src=\"https://github.com/andorey/social_net/blob/master/public/img/ill.png?raw=true\" alt=\"\"/>\n\t\t</div>\n\t)\n}\n\nexport default Header;\n","import React from 'react';\nimport s from './NavBar.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst NavBar = () => {\n\treturn (\n\t\t<div className={`${s.nav} ${s.active}`}>\n\t\t\t<div className={`${s.item}`}>\n\t\t\t\t<NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\n\t\t\t</div>\n\t\t\t<div className={s.item}>\n\t\t\t\t<NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\n\t\t\t</div>\n\t\t\t<div className={s.item}>\n\t\t\t\t<NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\n\t\t\t</div>\n\t\t\t<div className={s.item}>\n\t\t\t\t<NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\n\t\t\t</div>\n\t\t\t<div className={s.item}>\n\t\t\t\t<NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default NavBar;\n","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n\n\treturn (\n\t\t<div className={s.post}>\n\t\t\t<div className={s.item}>\n\t\t\t\t<div className={s.photo}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTa-Rtjo86Y2Wo-a_WCxI-Eao3f-L9VbK9eGMoBSg-Pq5dhkaSd\"\n\t\t\t\t\t\talt=\"\"/>\n\t\t\t\t\t{props.message}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<span>like :</span>\n\t\t\t\t\t{props.likesCount}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Post;\n","import React from 'react';\nimport s from './Posts.module.css';\nimport Post from \"./Post/Post\";\n\n\nconst Posts = (props) => {\n\n\tlet onPostChange = () => {\n\t\tlet text = newPostElement.current.value;\n\t\tprops.updateNewPostText(text);\n\t};\n\n\tlet postsElements = props.postData.map(p => <Post message={p.post} likesCount={p.likesCount}/>);\n\n\tlet newPostElement = React.createRef();\n\n\tlet addPost = () => {\n\t\tprops.addPost();\n\t};\n\n\tlet oneAddTaskKeyPress = (e) => {\n\t\tif(e.key === 'Enter'){\n\t\t\tprops.addPost();\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={s.posts}>\n\t\t\t<div className={s.textArea}>\n\t\t\t\t<h3>My posts :</h3>\n\t\t\t\t<textarea onChange={onPostChange}\n\t\t\t\t\t\t  ref={newPostElement}\n\t\t\t\t\t\t  onKeyPress={oneAddTaskKeyPress}\n\t\t\t\t\t\t  value={props.newPostText}/>\n\t\t\t\t<div><button onClick={addPost}>Add Post</button></div>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t{postsElements}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Posts;\n","import React from 'react';\nimport s from './Profile.module.css';\nimport Posts from \"./Posts/Posts\";\n\nconst Profile = (props) => {\n\n\treturn (\n\t\t<div className={s.header}>\n\t\t\t<div>\n\t\t\t\t<img\n\t\t\t\t\tsrc=\"https://images.wallpaperscraft.com/image/mountain_lake_nature_81057_2560x1080.jpg\"\n\t\t\t\t\talt=\"picture\"/>\n\t\t\t</div>\n\t\t\t<div className={s.myPhoto}>\n\t\t\t\t<div className={s.icon}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc=\"https://clutch.ua/crops/ba1ddb/360x0/1/0/2019/05/17/Ns355MiU9gTtcUX1sI0h2JsX8rDxjwTv.jpeg\"\n\t\t\t\t\t\talt=\"\"/>\n\t\t\t\t</div>\n\t\t\t\t<div className={s.aboutMe}>\n\t\t\t\t\tI am JS Developer. <br/> and I think that React is very cool framework! :)\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Posts postData={props.postPage.postData}\n\t\t\t\t\t   newPostText={props.postPage.newPostText}\n\t\t\t\t\t   updateNewPostText={props.updateNewPostText}\n\t\t\t\t\t   addPost={props.addPost} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Profile;\n","import React from 'react';\nimport s from './Message.module.css';\n\nconst Message = (props) => {\n\treturn (\n\t\t<div className={s.message}>\n\t\t\t{props.message}\n\t\t</div>\n\t);\n}\n\nexport default Message;","import React from 'react';\nimport s from './Dialog.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Dialog = (props) => {\n\treturn (\n\t\t<div className={s.dialog}>\n\t\t\t<NavLink to={/dialogs/ + props.id}>\n\t\t\t\t<div className={s.photo}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTa-Rtjo86Y2Wo-a_WCxI-Eao3f-L9VbK9eGMoBSg-Pq5dhkaSd\"\n\t\t\t\t\t\talt=\"\"/>\n\t\t\t\t\t{props.name}\n\t\t\t\t</div>\n\t\t\t</NavLink>\n\t\t</div>\n\t);\n}\n\nexport default Dialog;","import React from 'react';\nimport s from './Dialogs.module.css';\nimport Message from \"./Messages/Message\";\nimport Dialog from \"./Dialog/Dialog\";\n\nconst Dialogs = (props) => {\n\n\tlet dialogsElements = props.state.dialogsData.map(d => <Dialog name={d.name} id={d.id}/>);\n\tlet messagesElements = props.state.messagesData.map(m => <Message message={m.message}/>);\n\n\tlet newMessageElement = React.createRef();\n\n\tlet addMessage = () => {\n\t\tlet textMessage = newMessageElement.current.value;\n\t\talert(textMessage);\n\t}\n\n\treturn (\n\t\t<div className={s.dialogs}>\n\t\t\t<div className={s.dialogsItem}>\n\t\t\t\t{dialogsElements}\n\t\t\t</div>\n\t\t\t<div className={s.messages}>\n\t\t\t\t{messagesElements}\n\t\t\t\t<div className={s.textAreaButton}>\n\t\t\t\t\t<textarea ref={newMessageElement}></textarea>\n\t\t\t\t\t<button onClick={addMessage}>Add Message</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Dialogs;","import React from 'react';\nimport './App.css';\nimport Header from \"./Header/Header\";\nimport NavBar from \"./NavBar/NavBar\";\nimport Profile from \"./Profile/Profile\";\nimport Dialogs from \"./Dialogs/Dialogs\";\nimport {Route} from \"react-router-dom\";\n\n\nconst App = (props) => {\n\treturn (\n\t\t<div className=\"app-wrapper\">\n\t\t\t<Header/>\n\t\t\t<NavBar/>\n\t\t\t<div className=\"app-wrapper-content\">\n\t\t\t\t{/*<Route path=\"/profile\" component={Profile}/>*/}\n\t\t\t\t{/*<Route path=\"/dialogs\" component={Dialogs}/>*/}\n\t\t\t\t{/*<Route path=\"/news\" component={Dialogs}/>*/}\n\t\t\t\t{/*<Route path=\"/music\" component={Profile}/>*/}\n\t\t\t\t{/*<Route path=\"/settings\" component={Profile}/>*/}\n\n\t\t\t\t<Route path=\"/profile\"\n\t\t\t\t\t   render={() => <Profile\n\t\t\t\t\t\t   postPage={props.state.postPage}\n\t\t\t\t\t\t   updateNewPostText={props.updateNewPostText}\n\t\t\t\t\t\t   addPost={props.addPost}\n\t\t\t\t\t\t   />}/>\n\n\t\t\t\t<Route path=\"/dialogs\"\n\t\t\t\t\t   render={() => <Dialogs\n\t\t\t\t\t\t   state={props.state.dialogsPage}/>}/>\n\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import * as serviceWorker from './serviceWorker';\nimport store from \"./redux/state\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\n\n\nexport let renderEntireTree = (state) => {\n\n\tReactDOM.render(\n\t\t<BrowserRouter>\n\t\t\t<App state={state}\n\t\t\t\t addPost={store.addPost.bind(store)}\n\t\t\t\t updateNewPostText={store.updateNewPostText.bind(store)}/>\n\t\t</BrowserRouter>, document.getElementById('root'));\n};\n\nrenderEntireTree(store.getState());\n\nstore.subscribe(renderEntireTree);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}